name: Build and release docker image

on:
  schedule:
    - cron: "0 23 * * 1"
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

env:
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/${{ github.repository }}
  FQDN: troll.fejk.net
  JOB_NAME: troll
  GIT_SSL_NO_VERIFY: 1

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        # save the env to meta tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=${{ github.ref_name }}-${{ github.sha }}

        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
            platforms: linux/amd64, linux/arm64
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

      - name: COPY CONTAINER IMAGE NAME
        run: |
          echo "## :whale: There are available new images:" >> $GITHUB_STEP_SUMMARY



      # - name: Build and release image
      #   shell: bash
      #   run: |
      #     echo "Build image ${IMAGE}:${GITHUB_SHA}"

      #     # On master don't add the prefix
      #     export BRANCH="${GITHUB_REF#refs/*/}"
      #     if [[ "$BRANCH" == "main" ]]; then
      #       export PREFIX=""
      #     else
      #       export PREFIX=$(echo "${BRANCH}-" | sed 's/_/-/g')
      #     fi

      #     # Build image 
      #     docker build --tag ${IMAGE}:${GITHUB_SHA} .
      #     docker image tag ${IMAGE}:${GITHUB_SHA} ${IMAGE}:${BRANCH}

      #     # Push image
      #     docker push ${IMAGE}:${GITHUB_SHA}
      #     docker push ${IMAGE}:${BRANCH}

      #     echo "## :whale: There are available new images:" >> $GITHUB_STEP_SUMMARY
      #     echo "  - ${IMAGE}:${GITHUB_SHA}" >> $GITHUB_STEP_SUMMARY
      #     echo "  - ${IMAGE}:${GITHUB_REF#refs/*/}" >> $GITHUB_STEP_SUMMARY
      #     echo "" >> $GITHUB_STEP_SUMMARY

      #     # Create config file for the release
      #     cat > ./var.tf<<EOF
      #     # Generated by pipeline"
      #     fqdn  = "${PREFIX}${FQDN}"
      #     image = "${IMAGE}:${GITHUB_SHA}"

      #     EOF

      #     echo ":rocket: Depolyed app will be available soon there" >> $GITHUB_STEP_SUMMARY
      #     echo "## ${PREFIX}${FQDN}" >> $GITHUB_STEP_SUMMARY

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: deploy_vars
      #     path: ./var.tf
